:javascript
  function UCDRibbonGraphFilter(data){
    this.data = data;
    this.filter = {};
    this.filter_types = {};
    //Set tasks
    this.generate_menu();
    this.update_filter_hash();
  }

  UCDRibbonGraphFilter.prototype = {
    generate_menu : function(){
      var first_time = true;

      var filter = this.filter;
      var filter_types = this.filter_types;

      this.data["STUDENTS"].forEach(function(student){
        var demographics = student["DEMOGRAPHICS"];

        if (first_time){
          first_time = false;

          for (var key in demographics){
            if (typeof demographics[key] == "string"){
              filter[key] = [demographics[key]];
              filter_types[key] = "string";
            } else if (typeof demographics[key] == "boolean"){
              filter[key] = "Included";
              filter_types[key] = "boolean";
            } else if (typeof demographics[key] == "number"){
              filter[key] = [demographics[key],demographics[key]];
              filter_types[key] = "number";
            } else if (demographics[key] == null) {
              demographics[key] = "Not Specified";  // Rare problem here if the value in the first record is null and then not null in any other record.
            }
          }
        } else {
          for (var key in demographics){
            if (typeof demographics[key] == "string" && filter[key].indexOf(demographics[key]) == -1){
              filter[key].push(demographics[key]);
            } else if (typeof demographics[key] == "number"){
              if (demographics[key] < filter[key][0])
                filter[key][0] = demographics[key];

              if (demographics[key] > filter[key][1])
                filter[key][1] = demographics[key];

              filter[key] = [demographics[key],demographics[key]];
            } else if (demographics[key] == null){
              demographics[key] = "Not Specified";
              if (filter_types[key] == "string" && filter[key].indexOf("Not Specified") == -1)
                filter[key].push(demographics[key]);
            }
          }
        }
      });

      for (var key in this.filter){
        if (this.filter_types[key] == "string"){
          this.generate_string_menu_item(key, this.filter[key]);
        } else if (this.filter_types[key] == "boolean"){
          this.generate_boolean_menu_item(key, this.filter[key]);
        } else if (this.filter_types[key] == "number"){
          this.generate_numeric_menu_item(key, this.filter[key]);
        }
      }
    },

    generate_string_menu_item : function(key,values){
      var html_string = '<div class="filter-form-item">\n'+
        '<label for="'+key+'" class="filter-label">'+key+':</label>\n<br>\n'+
        '<div class="indent">'+
        '<select id="'+key+'" multiple>\n';

      values.forEach(function(val){
        html_string += '<option value="'+val+'" selected>'+val+'</option>\n';
      });

      html_string += (
        '</select>\n<br>\n'+
          '<a class="select_all" href="" id="'+key+'_select_all">Select All</a> / '+
          '<a class="select_none" href="" id="'+key+'_select_none">Select None</a>'+
        '</div>'+
        '</div>\n'
      );

      $("#filters").append(html_string);

    },

    generate_boolean_menu_item : function(key,values){
      var html_string = '<div class="filter-form-item">\n'+
        '<label for="'+key+'"  class="filter-label">'+key+':</label>\n<br>\n'+
        '<div class="indent">'+
          '<select id="'+key+'">\n'+
            '<option value="Included" selected>Included</option>\n'+
            '<option value="Excluded">Excluded</option>\n'+
            '<option value="Only">Only</option>\n'+
          '</select>\n<br>\n'+
          '<label for="'+key+'_include_nulls">Include Nulls:</label>\n'+
          '<input type="checkbox" id="'+key+'_include_nulls" checked>'+
        '</div>'+
      '</div>\n';

      $("#filters").append(html_string);
    },

    generate_numeric_menu_item : function(key,values){
      var html_string = '<div class="filter-form-item">\n'+
        '<p class="filter-label">'+key+':<p>'+
        '<div class="indent">'+
          '<label for="'+key+'_min">Min:</label>\n'+
          '<input type="number" id="'+key+'_min" min="'+values[0]+'" max="'+values[1]+'" value="'+values[0]+'">\n'+
          '<label for="'+key+'_max">Max:</label>\n'+
          '<input type="number" id="'+key+'_max" min="'+values[0]+'" max="'+values[1]+'" value="'+values[1]+'">\n<br>'+
          '<label for="'+key+'_include_nulls">Include Nulls:</label>\n'+
          '<input type="checkbox" id="'+key+'_include_nulls" checked>'+
        '</div>'+
      '</div>\n';

      $("#filters").append(html_string);
    },

    update_filter_hash : function(){
      for (var key in this.filter){
        if (this.filter_types[key] == "string"){
          this.filter[key] = $("#"+key).val();
        } else if (this.filter_types[key] == "boolean"){
          this.filter[key] = $("#"+key).val();
        } else if (this.filter_types[key] == "number"){
          this.filter[key] = [$("#"+key+"_min").val(),$("#"+key+"_max").val()];
        }
      }
    },

    filter_data : function(){
      var filtered_data = {"STUDENTS":[]};

      var filter = this.filter;
      var filter_types = this.filter_types;

      this.update_filter_hash();



      this.data["STUDENTS"].forEach(function(student){
        var demographics = student["DEMOGRAPHICS"];
        var push = true;

        for (var key in demographics){
          if (filter_types[key] == "string"){
            if ($("#"+key).val().indexOf(demographics[key]) == -1)
              push = false;

          } else if (filter_types[key] == "boolean"){
            if ($("#"+key).val() == "Only" && demographics[key] == false)
              push = false;

            if ($("#"+key).val() == "Excluded" && demographics[key] == true)
              push = false;

            if ($("#"+key+"_include_nulls").prop('checked') == false && demographics[key] == "Not Specified")
              push = false;

          } else if (filter_types[key] == "number"){
            if ($("#"+key+"_min").val() > demographics[key])
              push = false;

            if ($("#"+key+"_max").val() < demographics[key])
              push = false;

            if ($("#"+key+"_include_nulls").prop('checked') == false && demographics[key] == "Not Specified")
              push = false;
          }
        }

        if (push)
          filtered_data["STUDENTS"].push(student)

      });

      return filtered_data;

    }
  }
